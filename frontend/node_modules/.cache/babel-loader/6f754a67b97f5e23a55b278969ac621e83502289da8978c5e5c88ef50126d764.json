{"ast":null,"code":"var _jsxFileName = \"B:\\\\dev\\\\3DModelViewer\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Wellcome from \"./Wellcome\";\nimport * as Auth from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Api from \"../utils/Api\";\nimport AuthForm from \"./AuthForm\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isError, setError] = useState({});\n  const [messageError, setMessageError] = useState({});\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isAuth, setAuth] = useState(false);\n  const [cards, setCards] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [currentUser, setCurrentUser] = useState({});\n  const navigate = useNavigate();\n  const api = new Api({\n    baseUrl: \"https://api.thewargas.nomoredomains.monster\",\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': \"application/json\"\n    }\n  });\n\n  // useEffect(() => {\n\n  //   if (isLoggedIn) {\n  //     Promise.all([api.getInitialInfo(), api.getInitialCards()])\n\n  //     .then(([userData, cardsData]) => {\n  //       setCurrentUser(userData);\n  //       setCards(cardsData.reverse());\n  //     })\n\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  //   }\n  // }, [isLoggedIn]);\n\n  function validateInputs(e) {\n    if (!e.target.validity.valid) {\n      setError({\n        ...isError,\n        [e.target.name]: true\n      });\n      setMessageError({\n        ...messageError,\n        [e.target.name]: e.target.validationMessage\n      });\n    } else {\n      setError({\n        ...isError,\n        [e.target.name]: false\n      });\n      setMessageError({\n        ...messageError,\n        [e.target.name]: \"\"\n      });\n    }\n  }\n  function handleRegister(inputs) {\n    Auth.register(inputs.email, inputs.login, inputs.password).then(() => {\n      setAuth(true);\n      setTimeout(() => {\n        navigate(\"/sign-in\", {\n          replace: true\n        });\n      }, 2000);\n      setTimeout(() => {\n        setAuth(false);\n      }, 3000);\n    }).catch(error => {\n      setAuth(false);\n      console.log(error);\n    });\n  }\n  function handleAuthorize(inputs) {\n    Auth.authorize(inputs.login, inputs.password).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        setLoggedIn(true);\n        navigate(\"/models\", {\n          replace: true\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Wellcome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        element: /*#__PURE__*/_jsxDEV(AuthForm, {\n          onValidation: validateInputs,\n          isError: isError,\n          messageError: messageError,\n          title: \"Создать аккаунт\",\n          button: \"Создать аккаунт\",\n          paragraph: \"Уже есть аккаунт\",\n          link: \"Войти\",\n          isAuth: isAuth,\n          onSubmit: handleRegister,\n          register: \"true\",\n          route: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-in\",\n        element: /*#__PURE__*/_jsxDEV(AuthForm, {\n          onValidation: validateInputs,\n          isError: isError,\n          messageError: messageError,\n          title: \"Вход\",\n          button: \"Войти\",\n          paragraph: \"Нет аккаунта?\",\n          link: \"Зарегистрироваться\",\n          isAuth: isAuth,\n          onSubmit: handleAuthorize,\n          register: false,\n          route: \"/sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/models\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          cards: cards,\n          onValidation: validateInputs,\n          isError: isError,\n          messageError: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"6HnCYSKFoO1NbiPVdeiBZTBQk5U=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Route","Routes","useNavigate","Wellcome","Auth","CurrentUserContext","Api","AuthForm","Main","jsxDEV","_jsxDEV","App","_s","isError","setError","messageError","setMessageError","isLoggedIn","setLoggedIn","isAuth","setAuth","cards","setCards","currentUser","setCurrentUser","navigate","api","baseUrl","headers","localStorage","getItem","validateInputs","e","target","validity","valid","name","validationMessage","handleRegister","inputs","register","email","login","password","then","setTimeout","replace","catch","error","console","log","handleAuthorize","authorize","res","token","setItem","Provider","value","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onValidation","title","button","paragraph","link","onSubmit","route","_c","$RefreshReg$"],"sources":["B:/dev/3DModelViewer/frontend/src/components/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport Wellcome from \"./Wellcome\";\r\nimport * as Auth from \"../utils/Auth\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Api from \"../utils/Api\";\r\n\r\nimport AuthForm from \"./AuthForm\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n\r\n  const [isError, setError] = useState({});\r\n  const [messageError, setMessageError] = useState({});\r\n\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [isAuth, setAuth] = useState(false);\r\n\r\n  const [cards, setCards] = useState([1,2,3,4,5,6,7,8,9]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const api = new Api({\r\n    baseUrl: \"https://api.thewargas.nomoredomains.monster\",\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n      'Content-Type': \"application/json\",\r\n    },\r\n  });\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (isLoggedIn) {\r\n  //     Promise.all([api.getInitialInfo(), api.getInitialCards()])\r\n\r\n  //     .then(([userData, cardsData]) => {\r\n  //       setCurrentUser(userData);\r\n  //       setCards(cardsData.reverse());\r\n  //     })\r\n\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  //   }\r\n  // }, [isLoggedIn]);\r\n\r\n  function validateInputs(e) {\r\n    if (!e.target.validity.valid) {\r\n      setError({\r\n        ...isError,\r\n        [e.target.name]: true,\r\n      });\r\n      setMessageError({\r\n        ...messageError,\r\n        [e.target.name]: e.target.validationMessage,\r\n      });\r\n    } else {\r\n      setError({\r\n        ...isError,\r\n        [e.target.name]: false,\r\n      });\r\n      setMessageError({\r\n        ...messageError,\r\n        [e.target.name]: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleRegister(inputs) {\r\n    Auth.register(inputs.email, inputs.login, inputs.password)\r\n      .then(() => {\r\n        setAuth(true);\r\n        setTimeout(()=> {\r\n          navigate(\"/sign-in\", { replace: true });\r\n         }, 2000);\r\n        setTimeout(()=> {\r\n          setAuth(false);\r\n         }, 3000);\r\n      })\r\n      .catch((error) => {\r\n        setAuth(false);\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  function handleAuthorize(inputs) {\r\n    Auth.authorize(inputs.login, inputs.password)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem(\"jwt\", res.token);\r\n          setLoggedIn(true);\r\n          navigate(\"/models\", { replace: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n    return (\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <Wellcome />\r\n            }\r\n        />\r\n        <Route\r\n          path=\"/sign-up\"\r\n          element={\r\n            <AuthForm \r\n              onValidation={validateInputs}\r\n              isError={isError}\r\n              messageError={messageError}\r\n              title={\"Создать аккаунт\"}\r\n              button={\"Создать аккаунт\"}\r\n              paragraph={\"Уже есть аккаунт\"}\r\n              link={\"Войти\"}\r\n              isAuth={isAuth}\r\n              onSubmit={handleRegister}\r\n              register=\"true\"\r\n              route={\"/sign-in\"}\r\n            />\r\n            }\r\n        />\r\n        <Route\r\n          path=\"/sign-in\"\r\n          element={\r\n            <AuthForm \r\n              onValidation={validateInputs}\r\n              isError={isError}\r\n              messageError={messageError}\r\n              title={\"Вход\"}\r\n              button={\"Войти\"}\r\n              paragraph={\"Нет аккаунта?\"}\r\n              link={\"Зарегистрироваться\"}\r\n              isAuth={isAuth}\r\n              onSubmit={handleAuthorize}\r\n              register={false}\r\n              route={\"/sign-up\"}\r\n            />\r\n            }\r\n        />\r\n        <Route\r\n          path=\"/models\"\r\n          element={\r\n            <Main\r\n            cards={cards}\r\n            onValidation={validateInputs}\r\n            isError={isError}\r\n            messageError={messageError}\r\n            />\r\n            }\r\n        />\r\n        </Routes>\r\n      </CurrentUserContext.Provider>\r\n        \r\n    );\r\n  }\r\n  \r\n  export default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,KAAKC,IAAI,MAAM,eAAe;AACrC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,GAAG,MAAM,cAAc;AAE9B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAM,CAACmB,UAAU,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,MAAM,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElD,MAAM2B,QAAQ,GAAGvB,WAAW,EAAE;EAE9B,MAAMwB,GAAG,GAAG,IAAIpB,GAAG,CAAC;IAClBqB,OAAO,EAAE,6CAA6C;IACtDC,OAAO,EAAE;MACP,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE,EAAC;MACxD,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,SAASC,cAAcA,CAACC,CAAC,EAAE;IACzB,IAAI,CAACA,CAAC,CAACC,MAAM,CAACC,QAAQ,CAACC,KAAK,EAAE;MAC5BrB,QAAQ,CAAC;QACP,GAAGD,OAAO;QACV,CAACmB,CAAC,CAACC,MAAM,CAACG,IAAI,GAAG;MACnB,CAAC,CAAC;MACFpB,eAAe,CAAC;QACd,GAAGD,YAAY;QACf,CAACiB,CAAC,CAACC,MAAM,CAACG,IAAI,GAAGJ,CAAC,CAACC,MAAM,CAACI;MAC5B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLvB,QAAQ,CAAC;QACP,GAAGD,OAAO;QACV,CAACmB,CAAC,CAACC,MAAM,CAACG,IAAI,GAAG;MACnB,CAAC,CAAC;MACFpB,eAAe,CAAC;QACd,GAAGD,YAAY;QACf,CAACiB,CAAC,CAACC,MAAM,CAACG,IAAI,GAAG;MACnB,CAAC,CAAC;IACJ;EACF;EAEA,SAASE,cAAcA,CAACC,MAAM,EAAE;IAC9BnC,IAAI,CAACoC,QAAQ,CAACD,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,QAAQ,CAAC,CACvDC,IAAI,CAAC,MAAM;MACVxB,OAAO,CAAC,IAAI,CAAC;MACbyB,UAAU,CAAC,MAAK;QACdpB,QAAQ,CAAC,UAAU,EAAE;UAAEqB,OAAO,EAAE;QAAK,CAAC,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;MACTD,UAAU,CAAC,MAAK;QACdzB,OAAO,CAAC,KAAK,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACX,CAAC,CAAC,CACD2B,KAAK,CAAEC,KAAK,IAAK;MAChB5B,OAAO,CAAC,KAAK,CAAC;MACd6B,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEA,SAASG,eAAeA,CAACZ,MAAM,EAAE;IAC/BnC,IAAI,CAACgD,SAAS,CAACb,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,QAAQ,CAAC,CAC1CC,IAAI,CAAES,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,KAAK,EAAE;QACbzB,YAAY,CAAC0B,OAAO,CAAC,KAAK,EAAEF,GAAG,CAACC,KAAK,CAAC;QACtCpC,WAAW,CAAC,IAAI,CAAC;QACjBO,QAAQ,CAAC,SAAS,EAAE;UAAEqB,OAAO,EAAE;QAAK,CAAC,CAAC;MACxC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEE,oBACEtC,OAAA,CAACL,kBAAkB,CAACmD,QAAQ;IAACC,KAAK,EAAElC,WAAY;IAAAmC,QAAA,eAC9ChD,OAAA,CAACT,MAAM;MAAAyD,QAAA,gBACPhD,OAAA,CAACV,KAAK;QACJ2D,IAAI,EAAC,GAAG;QACRC,OAAO,eACLlD,OAAA,CAACP,QAAQ;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eACFtD,OAAA,CAACV,KAAK;QACJ2D,IAAI,EAAC,UAAU;QACfC,OAAO,eACLlD,OAAA,CAACH,QAAQ;UACP0D,YAAY,EAAElC,cAAe;UAC7BlB,OAAO,EAAEA,OAAQ;UACjBE,YAAY,EAAEA,YAAa;UAC3BmD,KAAK,EAAE,iBAAkB;UACzBC,MAAM,EAAE,iBAAkB;UAC1BC,SAAS,EAAE,kBAAmB;UAC9BC,IAAI,EAAE,OAAQ;UACdlD,MAAM,EAAEA,MAAO;UACfmD,QAAQ,EAAEhC,cAAe;UACzBE,QAAQ,EAAC,MAAM;UACf+B,KAAK,EAAE;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eACFtD,OAAA,CAACV,KAAK;QACJ2D,IAAI,EAAC,UAAU;QACfC,OAAO,eACLlD,OAAA,CAACH,QAAQ;UACP0D,YAAY,EAAElC,cAAe;UAC7BlB,OAAO,EAAEA,OAAQ;UACjBE,YAAY,EAAEA,YAAa;UAC3BmD,KAAK,EAAE,MAAO;UACdC,MAAM,EAAE,OAAQ;UAChBC,SAAS,EAAE,eAAgB;UAC3BC,IAAI,EAAE,oBAAqB;UAC3BlD,MAAM,EAAEA,MAAO;UACfmD,QAAQ,EAAEnB,eAAgB;UAC1BX,QAAQ,EAAE,KAAM;UAChB+B,KAAK,EAAE;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH,eACFtD,OAAA,CAACV,KAAK;QACJ2D,IAAI,EAAC,SAAS;QACdC,OAAO,eACLlD,OAAA,CAACF,IAAI;UACLa,KAAK,EAAEA,KAAM;UACb4C,YAAY,EAAElC,cAAe;UAC7BlB,OAAO,EAAEA,OAAQ;UACjBE,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAE1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACmB;AAGlC;AAACpD,EAAA,CAtJMD,GAAG;EAAA,QAWOT,WAAW;AAAA;AAAAsE,EAAA,GAXrB7D,GAAG;AAwJV,eAAeA,GAAG;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}