{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  changeAvatar(input) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: input.avatar\n      })\n    }).then(this._handleResponse);\n  }\n  changeUserInfo(inputs) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: inputs.name,\n        about: inputs.about\n      })\n    }).then(this._handleResponse);\n  }\n  createCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify(data)\n    }).then(this._handleResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(this._handleResponse);\n  }\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"PUT\"\n    }).then(this._handleResponse);\n  }\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(this._handleResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-58\",\n  headers: {\n    authorization: \"c9a28bcb-0219-422f-80d6-0648efb4bc5b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_handleResponse","response","ok","json","Promise","reject","res","status","getInitialInfo","fetch","then","getInitialCards","changeAvatar","input","method","body","JSON","stringify","avatar","changeUserInfo","inputs","name","about","createCard","data","deleteCard","id","putLike","deleteLike","api","authorization"],"sources":["C:/Users/warga/Desktop/dev/mesto-react/mesto-react/src/api/Api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  changeAvatar(input) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({ avatar: input.avatar }),\n    }).then(this._handleResponse);\n  }\n\n  changeUserInfo(inputs) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: inputs.name,\n        about: inputs.about,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  createCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify(data),\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    }).then(this._handleResponse);\n  }\n\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"PUT\",\n    }).then(this._handleResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    }).then(this._handleResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-58\",\n  headers: {\n    authorization: \"c9a28bcb-0219-422f-80d6-0648efb4bc5b\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}