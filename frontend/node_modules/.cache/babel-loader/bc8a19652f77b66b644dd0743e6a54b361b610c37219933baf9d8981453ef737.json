{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Ошибка: ${response.status}`);\n}\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(handleResponse);\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(handleResponse);\n};\nexport const checkToken = data => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${data}`\n    }\n  }).then(handleResponse);\n};","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","data","Authorization"],"sources":["C:/Users/warga/Desktop/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nfunction handleResponse(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${response.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const checkToken = (data) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${data}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAChC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB;EAEA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AACrD;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,cAAc,CAAC;AACzB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,cAAc,CAAC;AACzB,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAIC,IAAI,IAAK;EAClC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,IAAK;IAChC;EACF,CAAC,CAAC,CAACH,IAAI,CAAChB,cAAc,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}