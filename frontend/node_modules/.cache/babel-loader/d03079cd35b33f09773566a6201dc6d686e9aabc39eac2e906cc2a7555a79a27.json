{"ast":null,"code":"export const BASE_URL = \"https://api.nomoreparties.co\";\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(`Ошибка: ${response.status}`);\n}\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(handleResponse);\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem(\"jwt\", data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","handleResponse","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","data","user","localStorage","setItem","jwt","catch","err","console","log"],"sources":["C:/Users/warga/Desktop/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://api.nomoreparties.co\";\r\n\r\nfunction handleResponse(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${response.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.user) {\r\n        localStorage.setItem(\"jwt\", data.jwt);\r\n        return data;\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,8BAA8B;AAEtD,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAChC,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;EACxB;EAEA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AACrD;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAChB,cAAc,CAAC;AACzB,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAGA,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CACCO,IAAI,CAAEf,QAAQ,IAAKA,QAAQ,CAACE,IAAI,EAAE,CAAC,CACnCa,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,IAAI,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC;MACrC,OAAOJ,IAAI;IACb;EACF,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}